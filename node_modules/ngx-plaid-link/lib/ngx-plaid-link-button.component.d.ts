import { EventEmitter } from "@angular/core";
import { PlaidOnEventArgs, PlaidOnExitArgs, PlaidOnSuccessArgs } from './interfaces';
import { ICustomWindow } from './ngx-plaid-link.directive';
import * as i0 from "@angular/core";
export declare class NgxPlaidLinkButtonComponent {
    clientName: string;
    Event: EventEmitter<PlaidOnEventArgs>;
    Success: EventEmitter<PlaidOnSuccessArgs>;
    Click: EventEmitter<any>;
    Load: EventEmitter<any>;
    Exit: EventEmitter<PlaidOnExitArgs>;
    private defaultProps;
    publicKey?: string;
    apiVersion?: string;
    env?: string;
    institution?: string;
    product?: Array<string>;
    selectAccount?: boolean;
    token?: string;
    webhook?: string;
    countryCodes?: string[];
    style?: any;
    buttonText?: string;
    className?: string;
    receivedRedirectUri?: string;
    isWebview?: boolean;
    constructor();
    get nativeWindow(): ICustomWindow;
    onScriptError(): void;
    onDirectiveSuccess(event: PlaidOnSuccessArgs): void;
    onDirectiveExit(event: PlaidOnExitArgs): void;
    onDirectiveLoad(event: any): void;
    onDirectiveEvent(event: PlaidOnEventArgs): void;
    onDirectiveClick(event: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxPlaidLinkButtonComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NgxPlaidLinkButtonComponent, "mr-ngx-plaid-link-button", never, { "clientName": "clientName"; "publicKey": "publicKey"; "apiVersion": "apiVersion"; "env": "env"; "institution": "institution"; "product": "product"; "selectAccount": "selectAccount"; "token": "token"; "webhook": "webhook"; "countryCodes": "countryCodes"; "style": "style"; "buttonText": "buttonText"; "className": "className"; "receivedRedirectUri": "receivedRedirectUri"; "isWebview": "isWebview"; }, { "Event": "Event"; "Success": "Success"; "Click": "Click"; "Load": "Load"; "Exit": "Exit"; }, never, never>;
}
